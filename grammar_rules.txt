factor: PLUS factor
      | MINUS factor
      | INT
      | LPAR expression RPAR
      | VAR

term: factor ((PLUS|MINUS) factor)*

expression: term ((MULT|DIV) term)*

logic-expression: expression LOGIC expression

var: ID

assignment: var ASSGN expression
          | var INC
          | var INCBY factor

if: IF logic-expression (compound_statement) (ELIF logic-expression (compound_statement))*? (ELSE (compound_statement))?

for: FOR (assignment, expression, assignment) (compound_statement)

while: WHILE condition (compound_statement)

func: func var ((argument)*) {compound_statement}

empty: //JS uses this

statement: compound_statement
         | assignment
         | empty
         | if


statement_list: statement
              | statement LINE statement_list
              
compound_statement: statement_list

program: compound_statement

FOR (i = 0; i < N; i++) {
      loop body
}

while condition {
      loop body
}



